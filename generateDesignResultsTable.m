% study_PTOsizing.m script m-file
% AUTHORS:
% Jeremy Simmons (email: simmo536@umn.edu)
% University of Minnesota
% Department of Mechanical Engineering
%
% CREATION DATE:
% December 31, 2021
%
% PURPOSE:
% The purpose of this script is to generate a table showing design
% parameters for each sea state given a specific maximum pump displacement 
% and RO module membrane area. This is perfromed on data generated by the
% script "study_PTOsizing.m".
%
% FILE DEPENDENCIES:
%
% UPDATES
% 12/31/2021 - created.
%
% Copyright (C) 2022  Jeremy W. Simmons II
% 
%   This program is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
% 
%   This program is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
% 
%   You should have received a copy of the GNU General Public License
%   along with this program. If not, see <https://www.gnu.org/licenses/>.
%
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% find design values for a given combination specified by max disp. and RO module size
iPTO = 3;
iiS_ro = 1;
D_wChoice = 0.10;
iD_wChoice = find(data(iPTO,iiS_ro).D_w(:,1) <= D_wChoice, 1,'last');
iS_roChoice = 1;

nSS = length(data(iPTO,iiS_ro).par.SSset);
D_wDesign = zeros(1,nSS);
S_roDesign = zeros(1,nSS);
P_iDesign = zeros(1,nSS);
for iSS = 1:nSS
    iD_w = data(iPTO,iiS_ro).design(iD_wChoice,iS_roChoice,iSS).iD_w;
    iS_ro = data(iPTO,iiS_ro).design(iD_wChoice,iS_roChoice,iSS).iS_ro;
    q_perm(iSS) = data(iPTO,iiS_ro).design(iD_wChoice,iS_roChoice,iSS).q_perm;
    D_wDesign(iSS) = data(iPTO,iiS_ro).D_w(iD_w,1);
    S_roDesign(iSS) = data(iPTO,iiS_ro).S_ro(1,iS_ro);
    P_iDesign(iSS) = data(iPTO,iiS_ro).p_i(iD_w,iS_ro,iSS);
    feasible(iSS) = data(iPTO,iiS_ro).feasible(iD_w,iS_ro,iSS);
    if ~feasible(iSS)
        D_wDesign(iSS) = nan;
        S_roDesign(iSS) = nan;
        P_iDesign(iSS) = nan;
    end
end

if iiPTO(iPTO) == 2 || iiPTO(iPTO) == 4
    dutyDesign = zeros(1,nSS);
    for iSS = 1:nSS
        iD_w = data(iPTO,iiS_ro).design(iD_wChoice,iS_roChoice,iSS).iD_w;
        iS_ro = data(iPTO,iiS_ro).design(iD_wChoice,iS_roChoice,iSS).iS_ro;
        dutyDesign(iSS) = data(iPTO,iiS_ro).duty(iD_w,iS_ro,iSS);
        if ~feasible(iSS)
            dutyDesign(iSS) = nan;
        end
    end
end

switch iiPTO(iPTO)
    case {1 3}
        varNames = {'Sea State','Displacement (L/rad)', ...
                    'S_ro(m^2)','Permeate Prod. (m^3/day)','P_i (MPa)','Feasible (T/F)'};
        T_D = table([data(iPTO,iiS_ro).par.SSset]',1e3*D_wDesign',S_roDesign',24*3600*q_perm',1e-6*P_iDesign', ...
                    feasible','VariableNames',varNames)
    case {2 4}
        varNames = {'Sea State','Displacement (L/rad)', ...
                    'S_ro (m^2)','Permeate Prod. (m^3/day))','P_i (MPa)','duty','Feasible (T/F)'};
        T_D = table([data(iPTO,iiS_ro).par.SSset]',1e3*D_wDesign',S_roDesign',24*3600*q_perm',1e-6*P_iDesign', ...
                    dutyDesign',feasible','VariableNames',varNames)
end